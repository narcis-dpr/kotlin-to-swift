package com.github.narcisdpr.kotlintoswift.convertLibrary

object DefaultIdentifiers {
    const val OPEN = "open "
    const val DATA = "data "
    const val ABSTRACT = "abstract "
    const val PRIVATE = "private "
    const val PROTECTED = "protected "
    const val INTERNAL = "internal "
    const val PUBLIC = "public "
    const val CLASS = "class "
    const val ENUM = "enum "
    const val INTERFACE = "interface "
    const val OVERRIDE = "override "
    const val INIT = "init "
    const val FUN = "fun"
    const val LET = "let"
    const val VAR = "var"
    const val SWIFT = "SWIFT"
    const val MAIN = "main"
    const val MAIN_ARGS = "Array<String>"
    const val WHEN = "when "
    const val GET = "get"
    const val SET = "set"
    const val ARRAY = "Array"
    const val MAP = "map"
    const val CMAP = "Map"
    const val ARRAY_LIST_OF = "arrayListOf"
    const val ARRAY_LIST = "ArrayList"
    const val LINKED_LIST = "LinkedList"
    const val LIST = "List"
    const val EMPTY_MAP = "emptyMap"
    const val HASH_MAP_C = "HashMap"
    const val HASH_MAP = "hashMap"
    const val LINKED_HASH_MAP = "LinkedHashMap"
    const val ARRAY_MAP = "ArrayMap"
    const val MUTABLE_MAP = "mutableMap"
    const val LINKED_MAP = "linkedMap"
    const val LINKED_HASH_SET = "LinkedHashSet"
    const val HASH_SET_C = "HashSet"
    const val HASH_SET = "hashSet"
    const val ARRAY_SET = "ArraySet"
    const val EMPTY_SET = "emptySet"
    const val MUTABLE_SET = "mutableSet"
    const val LINKED_SET = "linkedSet"
    const val IF = "if"
    const val IN = " in "
    const val ELSE = "else"
    const val FOR = "for"
    const val SWITCH = "switch"
    const val WHILE = "while"
    const val CATCH = "catch"
    const val ARROW = " -> "
    const val FUNC = "func"
    const val IT = "it"
    const val TRY = "try"
    const val THROW = "throw"
    const val CONTINUE = "continue"
    const val RETURN = "return"
}